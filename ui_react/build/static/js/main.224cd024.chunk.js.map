{"version":3,"sources":["components/CreateGraph_sub/Chart.js","components/CreateGraph_sub/PropChart.js","components/CreateGraph.js","components/Header.js","components/CreateTables_sub/History.js","components/CreateTables_sub/Forecast.js","components/CreateTables_sub/PropTableHistory.js","components/CreateTables.js","App.js","serviceWorker.js","index.js"],"names":["Basic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","options","chart","background","foreColor","xaxis","categories","grid","row","colors","opacity","dataLabels","enabled","stroke","curve","title","text","align","margin","offsetY","series","name","data","react_default","a","createElement","react_apexcharts_min_default","type","height","width","Component","PropChart","onChange","e","setState","defineProperty","target","value","onSubmit","preventDefault","_this$state","newData","fromDate","toDate","currency","console","log","JSON","stringify","errors","_this$state2","className","style","cursor","map","option","idx","key","CreateGraph","CreateGraph_sub_PropChart","Chart","Header","History","date","trends","past_forecast","columns","accessor","es","defaultPageSize","showPaginationBottom","course","PropTableHistory","CreateTables","CreateTables_sub_PropTableHistory","CreateTables_sub_History","Forecast","App","components_Header","components_CreateGraph","components_CreateTables","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.224cd024.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass Basic extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          background: '#f4f4f4',\r\n          foreColor: '#333'\r\n        },\r\n\r\n        xaxis: {\r\n          categories: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\"\r\n          ]\r\n        },\r\n        \r\n        /* fill: {\r\n          colors: ['#f44336']\r\n        }, */\r\n    \r\n        grid: {\r\n          row: {\r\n            colors: ['#f3f3f3', 'transparent'],\r\n            opacity: 0.5\r\n          },\r\n        },\r\n\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n\r\n        stroke: {\r\n          curve: 'straight'\r\n        },\r\n    \r\n\r\n        title: {\r\n          text: 'BTC course',\r\n          align: 'center',\r\n          margin: 20,\r\n          offsetY: 20,\r\n          \r\n        }\r\n      },\r\n\r\n      series: [{\r\n        name: 'Population',\r\n        data: [\r\n          8550405,\r\n          3971883,\r\n          2720546,\r\n          2296224,\r\n          1567442,\r\n          1563025,\r\n          1469845,\r\n          1394928,\r\n          1300092,\r\n          1026908,\r\n          1026908,\r\n          1026908\r\n        ]\r\n      }]\r\n    }\r\n      \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <Chart \r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"line\"\r\n          height=\"450px\"\r\n          width=\"100%\"\r\n\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Basic;","import React, { Component } from 'react';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nclass PropChart  extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \r\n      options: ['USD', 'EUR', 'GBP'],\r\n\r\n      currency: 'USD',\r\n      fromDate: '',\r\n      toDate: '',\r\n      \r\n      errors: {\r\n        fromDate: '',\r\n        toDate: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = e => this.setState ({\r\n    [e.target.name]: e.target.value}\r\n  )\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {fromDate, toDate, currency} = this.state;\r\n\r\n    const newData = {\r\n      fromDate,\r\n      toDate,\r\n      currency\r\n    }\r\n    \r\n\r\n    //Проверка пустых полей\r\n    if (newData.fromDate < newData.toDate) {\r\n      console.log(JSON.stringify(newData));\r\n    } \r\n    \r\n    else console.log('Wrong! Check your date');\r\n\r\n    //POST запрос на сервер\r\n    /* fetch('https://mywebsite.com/endpoint/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      firstParam: 'yourValue',\r\n      secondParam: 'yourOtherValue',\r\n    })\r\n  }) */\r\n    /* Код ? */\r\n    \r\n  }\r\n\r\n    \r\n  render() {\r\n    const {currency, fromDate, toDate} = this.state;\r\n\r\n    return (\r\n        <form onSubmit={this.onSubmit}\r\n          className = \" form-inline float-right\" >\r\n          \r\n            From\r\n            <input \r\n              className=\"m-2 form-control form-control-sm\"\r\n              type=\"date\"\r\n              name=\"fromDate\"\r\n              value = {fromDate}\r\n              onChange = {this.onChange}\r\n            /> \r\n              \r\n            To\r\n            <input \r\n              className =\"m-2 form-control form-control-sm\"\r\n              type=\"date\"\r\n              name=\"toDate\"\r\n              value = {toDate}\r\n              onChange = {this.onChange}\r\n            /> \r\n\r\n            Value\r\n            <select\r\n              className = \" form-control form-control-sm m-2 mr-2\"\r\n              style={{cursor:'pointer'}}\r\n              name=\"currency\"\r\n              onChange = {this.onChange}\r\n              value={currency}\r\n            >\r\n\r\n            {this.state.options.map((option, idx) =>\r\n              <option\r\n                key={idx}\r\n                value={option}>\r\n              {option} \r\n              </option>)}\r\n            </select>\r\n\r\n            <input \r\n              type=\"submit\"\r\n              className=\"btn btn-success btn-sm \"\r\n              value = \"Show\"\r\n            />\r\n         \r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PropChart;","import React, { Component } from 'react';\r\nimport Basic from './CreateGraph_sub/Chart'\r\nimport PropChart from './CreateGraph_sub/PropChart'\r\nimport '../App.css';\r\n//import CreateTable from './CreateTables';\r\n\r\n\r\nclass CreateGraph extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container d-flex flex-wrap content m-auto\">\r\n         \r\n        <div className = \"col-md-12\">\r\n            <PropChart />\r\n        </div>\r\n\r\n        <div className = \"col-md-12\">\r\n          <Basic />\r\n        </div>\r\n\r\n          \r\n\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateGraph;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card-header bg-info text-white mb-3 \">\r\n        <div className = \"container d-flex\">\r\n          <div className=\"col-md-6 \">\r\n            Javito v.1.0\r\n          </div>\r\n          <div className=\"col-md-6 text-right\">\r\n            email@gmail.com\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport '../../App.css';\r\n\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : [{\r\n        date: ['23.11'],// '24.11', '25.11'],\r\n        trends: ['upImg'],// 'dwnImg', 'upImg'],\r\n        past_forecast: ['win']//, 'win', 'lose']\r\n      }],\r\n      \r\n      columns : [{\r\n        Header: 'Date',\r\n        accessor: 'date', // String-based value accessors!\r\n      }, {\r\n        Header: 'Trends',\r\n        accessor: 'trends'\r\n        //Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\r\n      }, {\r\n        Header: 'Past forecast',\r\n        accessor: 'past_forecast'\r\n      }\r\n    ],\r\n\r\n    }\r\n  }\r\n    \r\n\r\n\r\n  render() {\r\n    const { data, columns } = this.state;\r\n    return (\r\n      <div className=\" text-center\">\r\n      <h4> History</h4>\r\n      \r\n\r\n       <ReactTable\r\n          data={data}\r\n          columns={columns}\r\n          defaultPageSize={3}\r\n          showPaginationBottom = {false}\r\n        />\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport '../../App.css';\r\n\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : [{\r\n        course: 'USD',\r\n        value: 2625\r\n      }],\r\n      \r\n      columns : [{\r\n        Header: 'Course',\r\n        accessor: 'course' // String-based value accessors!\r\n      }, {\r\n        Header: 'Value',\r\n        accessor: 'value',\r\n        //Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\r\n      }]\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    const {data, columns, } = this.state;\r\n    return (\r\n      <div className=\"text-center\">\r\n      <h4> Forecast</h4>\r\n       <ReactTable\r\n          data={data}\r\n          columns={columns}\r\n          defaultPageSize={3}\r\n          showPaginationBottom = {false}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\n\r\nclass PropTableHistory extends Component {\r\n  constructor (props) {\r\n    super (props);\r\n\r\n    this.state = {\r\n      options: ['USD', 'EUR', 'GBP'],\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Currency </h4> \r\n            <select\r\n              className = \" form-control form-control-sm \"\r\n              style={{cursor:'pointer'}}\r\n              name=\"currency\"\r\n             // onChange = {this.onChange}\r\n              //value={currency}\r\n            >\r\n\r\n            {this.state.options.map((option, idx) =>\r\n              <option\r\n                key={idx}\r\n                value={option}>\r\n              {option} \r\n              </option>)}\r\n            </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PropTableHistory;","import React, { Component } from 'react';\r\nimport 'react-table/react-table.css'\r\nimport '../App.css';\r\nimport History from './CreateTables_sub/History'\r\nimport Forecast from './CreateTables_sub/Forecast'\r\nimport PropTableHistory from './CreateTables_sub/PropTableHistory'\r\n//import Forecast from './CreateTables_sub/Forecast'\r\n\r\n\r\nclass CreateTables extends Component {\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container d-flex mb-5 mt-3\">\r\n        <div className=\"col-md-3\">\r\n          <PropTableHistory />\r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <History />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <Forecast />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateTables;","import React, { Component } from 'react';\nimport './App.css';\nimport CreateGraph from './components/CreateGraph'\nimport Header from './components/Header'\nimport CreateTables from './components/CreateTables';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <CreateGraph />\n        <CreateTables />\n      </div>\n    );  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* import 'bootstrap/dist/css/bootstrap.min.css';\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}